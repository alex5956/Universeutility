<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Order extends \App\Entity\Order implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'product', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'stripeToken', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'brandStripe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'last4Stripe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'idChargeStripe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'statusStripe', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'reference', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'product', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'stripeToken', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'brandStripe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'last4Stripe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'idChargeStripe', '' . "\0" . 'App\\Entity\\Order' . "\0" . 'statusStripe', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Order $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getReference(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference(string $reference): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct(): ?\App\Entity\Product
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(?\App\Entity\Product $product): \App\Entity\Order
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$product]);

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getStripeToken(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStripeToken', []);

        return parent::getStripeToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setStripeToken(?string $stripeToken): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStripeToken', [$stripeToken]);

        parent::setStripeToken($stripeToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrandStripe(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrandStripe', []);

        return parent::getBrandStripe();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrandStripe(?string $brandStripe): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrandStripe', [$brandStripe]);

        parent::setBrandStripe($brandStripe);
    }

    /**
     * {@inheritDoc}
     */
    public function getLast4Stripe(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLast4Stripe', []);

        return parent::getLast4Stripe();
    }

    /**
     * {@inheritDoc}
     */
    public function setLast4Stripe(?string $last4Stripe): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLast4Stripe', [$last4Stripe]);

        parent::setLast4Stripe($last4Stripe);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdChargeStripe(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdChargeStripe', []);

        return parent::getIdChargeStripe();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdChargeStripe(?string $idChargeStripe): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdChargeStripe', [$idChargeStripe]);

        parent::setIdChargeStripe($idChargeStripe);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStripe(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStripe', []);

        return parent::getStatusStripe();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusStripe(?string $statusStripe): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusStripe', [$statusStripe]);

        parent::setStatusStripe($statusStripe);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

}
